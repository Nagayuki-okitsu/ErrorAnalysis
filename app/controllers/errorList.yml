- err_mess: ActionView::MissingTemplate
  cause: 指定のビューファイルがありません。
  hint: |
          　ビューファイルの名前を間違えていないか確認してみましょう。

          　また部分テンプレートのビューファイル名の先頭には「 _ 」を付ける必要があります。



- err_mess: ActiveRecord::PendingMigrationError
  cause: 実行していないマイグレーションファイルがあります。
  hint: |
          ターミナルで「rails db:migrate」を実行しましょう。



- err_mess: ArgumentError
  cause: 「引数」が不適切です。
  hint: |
          　引数とはメソッドに渡す値のことです。

          　　例1）
          　　 update(a) ←updateというメソッドに変数aを渡す。このとき変数aが引数。

          　　例2）
          　　　　　 def sum(a,b)・・・メソッド作成
          　　　　　　 puts a + b
          　　　　　 end
          　　
          　　　　　 sum(x,y)・・・メソッド呼び出し


          　　例2のsumメソッドは引数を2つ取るように作成しているため、呼び出し時は「sum(引数１,引数２)」というように2つの引数を与えますが、「sum(x)」や「sum(x,y,z)」のように引数の数が定義に反しているとエラーになります。



- err_mess: end-of-input
  cause: 「end」が不足しています。
  hint: |
          　if や loop 文などの「end」を必要とするプログラムを一つ一つ確認してみましょう。

          　普段から先に「end」を書いてしまうことやインデントすることを心掛けましょう。

          　※インデント・・・空白を使い内側と外側の処理をわけて見やすくすること。
          　　　　　　　　　　Tabキーを押すと一気にインデントできます。
          　　　例)
          　　　　if a==1
          　　　　　a = 2 * 3 ← 半角空白で内側を字下げ
          　　　　end



- err_mess: exception
  cause: 例外エラーです。
  hint: |
          　構文に問題はありませんが実行中の値によってはエラーになってしまうものです。

          　どの値でエラーになるのかを調べて例外が発生しないように処理を工夫しましょう。



- err_mess: IndexError
  cause: 添え字が配列の要素のないところを指定しています。
  hint: |
          　添え字(Index)・・・配列の要素を特定するための部屋番号

          　次の例で添え字が不適切な場合を見てみましょう。
          　例）
          　　arr = [5,-3,10]

          　　arr[0] → 5
          　　arr[1] → -3
          　　arr[2] → 10
          　　arr[3] → 存在しないためエラー

          　添え字が0から始まることに注意しましょう。
          　配列の最後の要素の添え字は「要素数 - 1」です。



- err_mess: invalid preprocessing directive
  cause: 無効な命令が存在します。
  hint: |
          エラー文に記載されている該当箇所を確認しましょう。



- err_mess: LoadError
  cause: ファイル名もしくはパスを間違えています。
  hint: |
          　実行しようとしているファイルの名前を間違えていないか確認してみましょう。
          　また読み込もうとしているファイル・フォルダの名前、パスを間違えていないか確認してみましょう。

          　パス・・・ファイルやフォルダが存在する場所。

          　パスを指定する際、ファイルがフォルダーの中にある場合は「バックスラッシュ（キーボードの”ろ”）」を使って階層を下げましょう。
          　例）
          　　image＼apple(imageフォルダのappleというファイル）



- err_mess: NameError
  cause: 変数や配列の名前が間違っています。
  hint: |
          　エラー文の中に、間違えた名前と最も近い名前の変数や配列が「Did you mean?  〇〇」のように記載されていることがあります。
      
          　もし記載があればその変数、配列を使用している箇所を確認してみましょう。




          　　例）

          　　【エラーのあるプログラム】
          
          　　1:　apple = "りんご"
          　　2:
          　　3:　puts applo
          
          　　【エラー文】

          　　main.rb:3:in `<main>': undefined local variable or method `applo' for main:Object 
          　　(NameError)  Did you mean?  apple
          　　　　　　　　　　　　　↑「3行目の'applo'は'apple'の間違いではないですか？」という意味



- err_mess: No such file or directory
  cause: ファイル名・フォルダ名を間違えています。
  hint: |
          　ファイル・フォルダの名前、パスを間違えていないか確認してみましょう。
          　パス・・・ファイルやフォルダが存在する場所。

          　パスを指定する際、ファイルがフォルダーの中にある場合は「バックスラッシュ（キーボードの”ろ”）」を使って階層を下げましょう。
          　例)
          　　image＼apple(imageフォルダのappleというファイル）



- err_mess: NoMethodError
  cause: 存在しないメソッドを呼び出そうとしています。
  hint: |
          　メソッドの名前を間違えている場合があります。

          　例）
          　　put a・・・putではなくputs
          　　※自作した関数についても関数名を間違えていないか確認しましょう。

          　Ruby on Railsの場合インスタンス変数に値が格納されていない場合があります。controllerを確認して正しく値を格納できているかチェックしましょう。



- err_mess: redeclaration of
  cause: 同じ変数を2回以上宣言しています。
  hint: |
          同じスコープ内に同じ名前の変数を宣言することはできません。



- err_mess: Routing Error
  cause: ルーティングが不適切です。
  hint: |
          　config/routes.rbでルーティングを確認・設定しましょう。

          　「rails routes」というコマンドをターミナルで実行するとルーティングを確認できます。



- err_mess: String too long
  cause: 文字列が255文字を超えています。
  hint: |
          string型に格納できる最大文字数は255文字です。



- err_mess: syntax error
  cause: 構文が正しくありません。
  hint: |
          　エラー文の中に不適切な構文となっている箇所や原因が記載されていることが多いため確認してみましょう。

          　またこのエラーと合わせてNameErrorなど他のエラーが出ている場合はそちらを参考にしましょう。

          　※プログラム中に全角の空白が入っている可能性があります。コードエディタ（プログラムを打ち込んでいる場所）でキーボードの「Ctrl」と「F」を同時に押すと検索ボックスが出てきます。検索ボックスに全角の空白を入力して探してみましょう。（この検索ボックスコマンドはWindowsPCであればほぼ全ての場面で使用できます。(Googleで文を探したり...etc)



- err_mess: too few arguments to function
  cause: 関数に与えている引数が多すぎます。
  hint: |
          関数を呼び出している箇所を見て定義通りに引数が渡されているか確認しましょう。



- err_mess: TypeError
  cause: 型が不適切です。
  hint: |
          　違う型の比較や計算はできません。

          　例1.1）
          　　if 1 >= ”あ”・・・「1」が「あ」より大きい?
          　例1.2)
          　　a = 1 + ”あ”・・・数字と文字は計算できない。


          　また引数に本来期待する型とは違う型の値が渡されている可能性もあります。
          　（引数・・・update(a) ←updateというメソッドに変数aを渡す。このとき変数aが引数。）

          　例）
          　　a = 5
          　　b = ”あ”

          　　sum(a,b)・・・sumというメソッドを呼び出す。(sumは引数1 + 引数2という処理を行うとする)

          　　↑　メソッドsumに型の違う変数が渡されてしまった。5 + ”あ” はできないためエラー。



- err_mess: undeclared
  cause: 宣言されていない変数が使用されています。
  hint: |
          該当の変数を宣言しましょう。



- err_mess: undefined reference to
  cause: 定義されていない関数が使用されています。
  hint: |
          ヘッダファイルをincludeしていない、または関数名を間違えている場合があります。



- err_mess: warning
  cause: 条件式部分で「 = 」が使用されています。
  hint: |
          　条件式で「等しい」を表す場合は「 == 」と書きます。

          　「 = 」は代入を表します。



- err_mess: ZeroDivisionError
  cause: 0で割り算を行っています。
  hint: |
          コンピュータの世界では「0」で割り算を行うことができません。



#- err_mess: 
#  cause: 
#  hint: |
#          